name: E2E - peppr Excellent Examples

permissions: read-all
on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * *' # 12AM EST/9PM PST

# refs
# https://frontside.com/blog/2022-12-12-dynamic-github-action-jobs/
# https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/

jobs:
  peppr-build:
    name: controller image
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - name: clone peppr
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: cmwylie19/peppr
          path: peppr

      - name: "set env: peppr"
        run: echo "peppr=${GITHUB_WORKSPACE}/peppr" >> "$GITHUB_ENV"

      - name: setup node
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: peppr

      - name: install peppr deps
        run: |
          cd "$peppr"
          npm ci

      - name: build peppr image
        run: |
          cd "$peppr"
          npm run build:image

      - name: tar peppr image
        run: |
          peppr_TAR="${GITHUB_WORKSPACE}/peppr-img.tar"
          echo "peppr_TAR=${peppr_TAR}" >> "$GITHUB_ENV"
          docker image save --output "$peppr_TAR" peppr:dev

      - name: upload image tar artifact
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: peppr-img.tar
          path: peppr-img.tar
          retention-days: 1

  examples-matrix:
    name: job matrix
    runs-on: ubuntu-latest
    needs:
      - peppr-build
    outputs:
      matrix: ${{ steps.create-matrix.outputs.matrix }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - name: clone peppr
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: cmwylie19/peppr
          path: peppr

      - name: "set env: peppr"
        run: echo "peppr=${GITHUB_WORKSPACE}/peppr" >> "$GITHUB_ENV"

      - name: clone peppr-excellent-examples
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: cmwylie19/peppr-excellent-examples
          path: peppr-excellent-examples

      - name: "set env: PEXEX"
        run: echo "PEXEX=${GITHUB_WORKSPACE}/peppr-excellent-examples" >> "$GITHUB_ENV"

      - name: setup node
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: peppr

      - name: create matrix
        run: |
          matrix=$(
            node "$peppr/.github/workflows/peppr-excellent-examples-matrix.js" "$PEXEX"
          )
          echo "matrix=${matrix}" >> "$GITHUB_OUTPUT"
        id: create-matrix

  excellent-examples:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs:
      - examples-matrix
    if: needs.examples-matrix.outputs.matrix != ''
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix: ${{ fromJSON(needs.examples-matrix.outputs.matrix) }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - name: "install k3d"
        run: "curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash"
        shell: bash

      - name: dowload image tar artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: peppr-img.tar
          path: ${{ github.workspace }}

      - name: import peppr image from tar
        run: |
          peppr_TAR="${GITHUB_WORKSPACE}/peppr-img.tar"
          echo "peppr_TAR=${peppr_TAR}" >> "$GITHUB_ENV"
          docker image load --input "$peppr_TAR"

      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: cmwylie19/peppr-excellent-examples
          path: peppr-excellent-examples

      - name: "set env: PEXEX"
        run: echo "PEXEX=${GITHUB_WORKSPACE}/peppr-excellent-examples" >> "$GITHUB_ENV"

      - name: setup node
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: peppr-excellent-examples

      - name: install peppr-excellent-examples deps
        run: |
          cd "$PEXEX"
          npm ci

      - name: run e2e tests
        run: |
          cd "$PEXEX"
          npm run --workspace=${{ matrix.name }} test:e2e -- --image peppr:dev
